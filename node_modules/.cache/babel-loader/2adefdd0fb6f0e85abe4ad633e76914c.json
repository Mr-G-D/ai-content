{"ast":null,"code":"\"use strict\";\n/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.0.4\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nvar _classCallCheck = require(\"/Users/ashley/Desktop/ai-content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ashley/Desktop/ai-content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\n\nvar packageJson = require(\"../package.json\");\n\nvar Configuration = /*#__PURE__*/function () {\n  function Configuration() {\n    var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Configuration);\n\n    this.apiKey = param.apiKey;\n    this.organization = param.organization;\n    this.username = param.username;\n    this.password = param.password;\n    this.accessToken = param.accessToken;\n    this.basePath = param.basePath;\n    this.baseOptions = param.baseOptions;\n    this.formDataCtor = param.formDataCtor;\n\n    if (!this.baseOptions) {\n      this.baseOptions = {};\n    }\n\n    this.baseOptions.headers = Object.assign({\n      'User-Agent': \"OpenAI/NodeJS/\".concat(packageJson.version),\n      'Authorization': \"Bearer \".concat(this.apiKey)\n    }, this.baseOptions.headers);\n\n    if (this.organization) {\n      this.baseOptions.headers['OpenAI-Organization'] = this.organization;\n    }\n\n    if (!this.formDataCtor) {\n      this.formDataCtor = require(\"form-data\");\n    }\n  }\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n\n\n  _createClass(Configuration, [{\n    key: \"isJsonMime\",\n    value: function isJsonMime(mime) {\n      var jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n      return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":null,"metadata":{},"sourceType":"script"}