{"ast":null,"code":"import _classCallCheck from \"/Users/ashley/Desktop/ai-content-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ashley/Desktop/ai-content-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ashley/Desktop/ai-content-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ashley/Desktop/ai-content-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ashley/Desktop/ai-content-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ashley/Desktop/ai-content-new/src/components/BlogIntro.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap';\n\nvar _require = require('openai'),\n    Configuration = _require.Configuration,\n    OpenAIApi = _require.OpenAIApi;\n\nvar BlogIntro = /*#__PURE__*/function (_Component) {\n  _inherits(BlogIntro, _Component);\n\n  function BlogIntro() {\n    var _this;\n\n    _classCallCheck(this, BlogIntro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogIntro).call(this));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n      var formData = new FormData(e.target),\n          formDataObj = Object.fromEntries(formData.entries()); // OpenAI davinci completion\n\n      var configuration = new Configuration({\n        apiKey: 'API Key Here'\n      });\n      var openai = new OpenAIApi(configuration);\n      openai.createCompletion(\"text-davinci-002\", {\n        prompt: \"Write an uplifting and positive Blog intro paragraph for the blog title \".concat(formDataObj.blogTitle, \" and include the keywords: \").concat(formDataObj.context),\n        temperature: 0.85,\n        max_tokens: 200,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n      }).then(function (response) {\n        _this.setState({\n          heading: \"Blog intro for: \".concat(formDataObj.blogTitle, \" with the keywords \").concat(formDataObj.context),\n          response: \"\".concat(response.data.choices[0].text)\n        });\n      });\n    };\n\n    _this.state = {\n      heading: \"AI Generated Response:\",\n      response: \"The introduction paragraph generated by the AI will show here.\"\n    };\n    return _this;\n  }\n\n  _createClass(BlogIntro, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"main-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        id: \"inputCol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"Blog Intro\"), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"pageDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"Enter your blog posts title and keywords that you'd like to include in your output. Click Submit and get a blog post introduction paragraph generated for you by AI. Think less and publish more.\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"textArea\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, \"Blog post title: \"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        name: \"blogTitle\",\n        placeholder: \"e.g. How to Make a Commit with Git\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"textArea\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, \"SEO keywords: \"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        name: \"context\",\n        placeholder: \"e.g. Git, CLI, commit message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        size: \"md\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        md: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }\n      }, this.state.heading)), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, this.state.response))))))));\n    }\n  }]);\n\n  return BlogIntro;\n}(Component);\n\nexport default BlogIntro;","map":{"version":3,"sources":["/Users/ashley/Desktop/ai-content-new/src/components/BlogIntro.js"],"names":["React","Component","Container","Form","Button","Card","Row","Col","require","Configuration","OpenAIApi","BlogIntro","onFormSubmit","e","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","configuration","apiKey","openai","createCompletion","prompt","blogTitle","context","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","then","response","setState","heading","data","choices","text","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Component } from 'react'\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap'\n\nconst { Configuration, OpenAIApi } = require('openai')\n\nclass BlogIntro extends Component {\n    constructor() {\n        super()\n        this.state = {\n            heading: `AI Generated Response:`,\n            response: `The introduction paragraph generated by the AI will show here.`\n        }\n    }\n    \n    onFormSubmit = e => {\n\n        e.preventDefault()\n\n        const formData = new FormData(e.target),\n        formDataObj = Object.fromEntries(formData.entries())\n\n        // OpenAI davinci completion\n        const configuration = new Configuration({\n            apiKey: 'API Key Here',\n        });\n        const openai = new OpenAIApi(configuration);\n\n        openai.createCompletion(\"text-davinci-002\", {\n            prompt: `Write an uplifting and positive Blog intro paragraph for the blog title ${formDataObj.blogTitle} and include the keywords: ${formDataObj.context}`,\n            temperature: 0.85,\n            max_tokens: 200,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0,\n        })\n        .then((response) => {\n            this.setState({\n                heading: `Blog intro for: ${formDataObj.blogTitle} with the keywords ${formDataObj.context}`,\n                response: `${response.data.choices[0].text}`\n            })\n        }); \n    }\n\n    render () {\n        return (\n            <div id=\"main-content\">\n                <Container>\n                <Row>\n                <Col xs={6} md={4} id=\"inputCol\">\n                    <h1>Blog Intro</h1>\n                    <p id=\"pageDescription\">Enter your blog posts title and keywords that you'd like to include in your output. Click Submit and get a blog post introduction paragraph generated for you by AI. Think less and publish more.</p>\n                    <Form onSubmit={this.onFormSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"textArea\">\n                            <Form.Label>Blog post title: </Form.Label>\n                            <Form.Control as=\"textarea\" name=\"blogTitle\" placeholder=\"e.g. How to Make a Commit with Git\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"textArea\">\n                            <Form.Label>SEO keywords: </Form.Label>\n                            <Form.Control as=\"textarea\" name=\"context\" placeholder=\"e.g. Git, CLI, commit message\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" size=\"md\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n                <Col xs={12} md={8}>\n                    <Card className=\"text-center\">\n                        <Card.Header><h2>{this.state.heading}</h2></Card.Header>\n                        <Card.Body>\n                            <Card.Title></Card.Title>\n                            <Card.Text>\n                            <p>{this.state.response}</p>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default BlogIntro;"]},"metadata":{},"sourceType":"module"}